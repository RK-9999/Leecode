/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) 
    {
        if(depth==1)
        {
            TreeNode* value = new TreeNode(val);
            value->left = root;
            return value;
        }
        else
        {
            return traverse(root,val,depth);
        }
    }
    TreeNode* traverse(TreeNode* root,int val,int depth)
    {
        if(depth-1==1)
        {
            TreeNode* val_1 = new TreeNode(val);
            TreeNode* val_2 = new TreeNode(val);
            
            TreeNode* left_t = root->left;
            TreeNode* right_t = root->right;
            
            val_1->left = left_t;
            val_2->right = right_t;
            
            root->left = val_1;
            root->right = val_2;
            
            return root;
        }
        else
        {
            if(root!=NULL)
            {
                if(root->left!=NULL)
                {
                    traverse(root->left,val,depth-1);
                }
                if(root->right!=NULL)
                {
                    traverse(root->right,val,depth-1);
                }
            }
            return root;
        }
    }
    
};
