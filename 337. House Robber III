/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<TreeNode*,int> m;
    int rob(TreeNode* root) 
    {
        // base cases //
        if(!root)
            return 0;
        if(m[root])return m[root];
        if(!root->left && !root->right)
            return root->val;
        int m1  = root->val;
        if(root->left)
            m1 += rob(root->left->left) + rob(root->left->right);
        if(root->right)
            m1  += rob(root->right->right) + rob(root->right->left);
        int m2 = rob(root->left) + rob(root->right);
        
        return m[root]=max(m1,m2);
        
    }
};
