/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void rohit(TreeNode* root,vector<int> &ans)
    {
        if(root->left)
            rohit(root->left,ans);// left //
        ans.push_back(root->val);// root//
        if(root->right)
            rohit(root->right,ans);// right //
    }
    vector<int> inorderTraversal(TreeNode* root) 
    {
        vector<int> ans;// return type of function is vector //
        if(root==NULL)
            return ans;
        rohit(root,ans);// recursion //
        return ans;
    }
};
