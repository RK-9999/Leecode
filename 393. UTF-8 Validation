class Solution {
public:
    bool validUtf8(vector<int>& data) 
    {
        int n = data.size();
        int count = 0;
        for(int i=0;i<n;i++)
        {
            int ele = data[i];
            if(!count)
            {
                // if first 3 bitts are 110 then next  1 byte is part 0f current UTF-8 character //
                if((ele >> 5) == 0b110)
                    count = 1;
                // if the first 4 bits are 1110 then next 2 bytes is part of current utf-8 character //
                else if((ele >> 4)==0b1110)
                    count = 2;
                // if the first 5 bits are 11110 then next 3 bytes is part of current utf-8 character //
                else if((ele >> 5)== 0b11110)
                    count = 3;
                // if the first bit is 1 then return false
                else if((ele >> 7))
                    return false;
            }
            else
            {
                // if the first 2 bits are 10 then return false //
                if((ele >> 6) != 0b10)
                    return false;
                count--;
            }
        }
        return (count==0);
    }
};
