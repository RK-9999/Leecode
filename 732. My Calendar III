class MyCalendarThree {

    private:
    unordered_map<int,int> vals;
    unordered_map<int,int> lazy;
    public:
    MyCalendarThree() {}
    void update(int start,int end,int left,int right,int index)
    {
        if(start > right || end < left)return;// base case //
        if(left >= start && right <= end)
        {
            lazy[index]++;
            vals[index]++;
        }
        else
        {
            int mid = (left+right)/2;
            update(start,end,left,mid,index*2);// left tree 
            update(start,end,mid+1,right,index*2+1);//right treee//
            vals[index] = lazy[index] + max(vals[index*2],vals[index*2+1]);
        }   
    }
    int book(int start, int end) 
    {
        update(start,end-1,1,1000000000,1);
        return vals[1];
    }
};

/**
 * Your MyCalendarThree object will be instantiated and called as such:
 * MyCalendarThree* obj = new MyCalendarThree();
 * int param_1 = obj->book(start,end);
 */
