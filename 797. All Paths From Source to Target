class Solution {
public:
    vector<vector<int>> res;
    vector<int> curr;
    int target;
    void dfs(vector<vector<int>> &graph,int src)
    {
        curr.push_back(src);
        if(src==target)
        {
            res.push_back(curr);
        }
        for(int x : graph[src])
        {
            dfs(graph,x);
        }
        // backtrqack //
        curr.pop_back();
    }
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) 
    {
        // src=0 & target =n-1 //
        target=graph.size()-1;
        dfs(graph,0);
        return res;
    }
};
