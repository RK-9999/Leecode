class Solution {
public:
    vector<vector<int>> vis;
    int ans=0;
    int uniquePathsIII(vector<vector<int>>& grid) 
    {
        int m,n,i1,j1;
        m = grid.size();
        n = grid[0].size();
        vis  = vector<vector<int>> (m,vector<int>(n,0));
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]== -1)
                vis[i][j]=1;
                if(grid[i][j]==1)
                {
                    i1=i;
                    j1=j;
                }
            }
        } 
        solve(i1,j1,grid);
        return ans;
    }
    void solve(int i,int j,vector<vector<int>> &grid)
    {
        if(i<0 || j<0 || i >= grid.size() || j >= grid[0].size() || vis[i][j]){return;}
        vis[i][j]=1;
        if(grid[i][j]==2)
        {
            if(check())
            {
                ans++;
            }
            vis[i][j]=0;
            return;
        }
        solve(i+1,j,grid);
        solve(i-1,j,grid);
        solve(i,j+1,grid);
        solve(i,j-1,grid);

        vis[i][j]=0;
        return;
    }
    bool check()
    {
        for(int i=0;i<vis.size();i++)
        {
            for(int j=0;j<vis[0].size();j++)
            {
                if(vis[i][j]==0)
                {
                    return false;
                }
            }
        }
        return true;
    }
};
