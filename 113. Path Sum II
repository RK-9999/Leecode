/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> ans;
    vector<int> v;
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) 
    {
        rohit_ka_solution(root,targetSum,v);
        return ans;
    }
    void rohit_ka_solution(TreeNode* root,int targetSum,vector<int> v)
    {
        if(root)
        {
            v.push_back(root->val);
            rohit_ka_solution(root->left,targetSum-root->val,v);
            rohit_ka_solution(root->right,targetSum-root->val,v);
            if(root->left == NULL and root->right == NULL and targetSum-root->val == 0)
            {
                ans.push_back(v);
            }
            v.pop_back();
        }
    }
    
};
